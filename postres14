# Use Ubuntu as the base image
FROM ubuntu:22.04

# Set environment variables for PostgreSQL
ENV POSTGRES_USER=airflow
ENV POSTGRES_PASSWORD=airflow
ENV POSTGRES_DB=airflow_db

# Set the locale for PostgreSQL
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8

# Install necessary packages and PostgreSQL
RUN apt-get update && \
    apt-get install -y \
    wget \
    gnupg2 \
    locales && \
    locale-gen en_US.UTF-8 && \
    apt-get install -y sudo

# Add PostgreSQL repository
RUN echo "deb [trusted=yes] http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" | tee /etc/apt/sources.list.d/pgdg.list && \
    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -

# Install PostgreSQL
RUN apt-get update && \
    apt-get install -y \
    postgresql-14 \
    postgresql-contrib-14

# Allow access and set proper ownership and permissions
RUN mkdir -p /var/lib/postgresql/data && \
    chown -R postgres:postgres /var/lib/postgresql && \
    chmod -R 755 /var/lib/postgresql

# Copy configuration files for PostgreSQL
COPY postgresql.conf /etc/postgresql/14/main/postgresql.conf
COPY pg_hba.conf /etc/postgresql/14/main/pg_hba.conf

# Expose PostgreSQL port
EXPOSE 5432

# Set up volumes to persist PostgreSQL data
VOLUME ["/var/lib/postgresql/data"]

# Switch to the postgres user and initialize the database
USER postgres

# Create the airflow user and database
RUN /usr/lib/postgresql/14/bin/initdb -D /var/lib/postgresql/data && \
    /usr/lib/postgresql/14/bin/pg_ctl start -D /var/lib/postgresql/data && \
    psql -c "CREATE USER ${POSTGRES_USER} WITH PASSWORD '${POSTGRES_PASSWORD}';" && \
    psql -c "CREATE DATABASE ${POSTGRES_DB} OWNER ${POSTGRES_USER};" && \
    psql -c "ALTER USER ${POSTGRES_USER} CREATEDB;"

# Start PostgreSQL server with the configuration
CMD ["postgres", "-D", "/var/lib/postgresql/data", "-c", "config_file=/etc/postgresql/14/main/postgresql.conf"]


-------------------------------


# Connection settings
listen_addresses = '*'
port = 5432

# Resource and memory configuration (adjust based on your system's memory)
shared_buffers = 128MB
work_mem = 4MB
maintenance_work_mem = 64MB

# Logging
logging_collector = on
log_directory = 'pg_log'
log_filename = 'postgresql-%Y-%m-%d.log'
log_truncate_on_rotation = on
log_rotation_age = 1d
log_rotation_size = 0
log_min_duration_statement = 1000

# Other settings can be added as needed


----------------------


# TYPE  DATABASE        USER            ADDRESS                 METHOD

# Allow local connections
local   all             postgres                                peer
local   all             all                                     md5

# IPv4 local connections:
host    all             all             0.0.0.0/0               md5

# IPv6 local connections:
host    all             all             ::/0                    md5

------------------


# Copy the entrypoint script
COPY entrypoint.sh /usr/local/bin/entrypoint.sh

# Make the entrypoint script executable
RUN chmod +x /usr/local/bin/entrypoint.sh

# Expose PostgreSQL port
EXPOSE 5432

# Set the entrypoint to execute the script
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]


--------

#!/bin/bash
set -e

# Start PostgreSQL in the background
echo "Starting PostgreSQL..."
service postgresql start

# Create the airflow user and database if they don't already exist
if ! psql -U postgres -tAc "SELECT 1 FROM pg_roles WHERE rolname='airflow'" | grep -q 1; then
    echo "Creating user 'airflow'..."
    psql -U postgres -c "CREATE USER airflow WITH PASSWORD 'airflow';"
fi

if ! psql -U postgres -tAc "SELECT 1 FROM pg_database WHERE datname='airflow_db'" | grep -q 1; then
    echo "Creating database 'airflow_db'..."
    psql -U postgres -c "CREATE DATABASE airflow_db OWNER airflow;"
fi

# Restart PostgreSQL to apply changes
echo "Restarting PostgreSQL..."
service postgresql restart

# Keep PostgreSQL running in the foreground
exec postgres -D /var/lib/postgresql/data -c config_file=/etc/postgresql/14/main/postgresql.conf

